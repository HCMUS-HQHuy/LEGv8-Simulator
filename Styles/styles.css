/* --- Root Variables (Defaults to Dark Mode) --- */
:root {
  --bg-color: #111;
  --frame-bg-color: #111;
  --text-color: #1DCD9F;
  --border-color: #1DCD9F; /* Primary border, used for frame, code editor, toggle */
  --header-bg-color: #222;
  --header-border-color: #4CAF50; /* Green accent */
  --component-fill: #000;
  --component-stroke: #fff;
  --control-color: #08c0f8; /* Blue for control components/lines/labels */
  --label-fill: #fff; /* General labels */
  --mem-label-fill: #bdb8b8; /* Memory specific labels */
  --label-start-fill: #fff; /* Assuming this label is on the main background */
  --signal-line-stroke: #6aff4d; /* Bright green signal */
  --emphasis-color: red; /* For moving dot, last table cell */
  --line-number-bg: #000;
  --line-number-color: #169976;
  --table-header-bg: #222; /* Slightly different from main bg for visual separation */
  --table-border-color: #444; /* Darker gray for internal table borders */
  --table-row-odd-bg: #111; /* Same as main background */
  --table-row-even-bg: #1a1a1a; /* Slightly lighter than odd for striping */
  --table-row-hover-bg: #444; /* Hover effect */
  --button-text-color: var(--text-color); /* Text color for the toggle button */
  --button-bg-color: transparent; /* Background for the toggle button */
  --button-border-color: var(--border-color); /* Border for the toggle button */
  --button-hover-text-color: var(--bg-color); /* Text color on button hover */
  --button-hover-bg-color: var(--border-color); /* Background on button hover */
}

/* --- Light Mode Overrides --- */
body.light {
  --bg-color: #ffffff;
  --frame-bg-color: #fdfced;
  --text-color: #000000;
  --border-color: #000000;
  --header-bg-color: #eeeeee;
  --header-border-color: #4CAF50; /* Keep green accent, or change to #555 */
  --component-fill: #ffffff;
  --component-stroke: #000000;
  --control-color: #007acc; /* Darker blue for contrast */
  --label-fill: #000000;
  --mem-label-fill: #555555; /* Dark gray */
  --label-start-fill: #000000; /* Assuming this label is on the main background */
  --signal-line-stroke: #228B22; /* Forest green */
  --emphasis-color: red; /* Red usually works on light too */
  --line-number-bg: #f0f0f0;
  --line-number-color: #555555;
  --table-header-bg: #f5f5f5;
  --table-border-color: #cccccc; /* Lighter gray for internal table borders */
  --table-row-odd-bg: #ffffff;
  --table-row-even-bg: #f9f9f9; /* Very light gray for striping */
  --table-row-hover-bg: #e0e0e0; /* Light gray hover */
  --button-text-color: var(--text-color);
  --button-bg-color: transparent;
  --button-border-color: var(--border-color);
  --button-hover-text-color: var(--bg-color);
  --button-hover-bg-color: var(--border-color);
}

/* --- Dark Mode Explicit Definitions (Good Practice) --- */
body.dark {
  --bg-color: #111;
  --text-color: #1DCD9F;
  --border-color: #1DCD9F;
  --header-bg-color: #222;
  --header-border-color: #4CAF50;
  --component-fill: #000;
  --component-stroke: #fff;
  --control-color: #08c0f8;
  --label-fill: #fff;
  --mem-label-fill: #bdb8b8;
  --label-start-fill: #fff;
  --signal-line-stroke: #6aff4d;
  --emphasis-color: red;
  --line-number-bg: #000;
  --line-number-color: #169976;
  --table-header-bg: #222;
  --table-border-color: #444;
  --table-row-odd-bg: #111;
  --table-row-even-bg: #1a1a1a;
  --table-row-hover-bg: #444;
  --button-text-color: var(--text-color);
  --button-bg-color: transparent;
  --button-border-color: var(--border-color);
  --button-hover-text-color: var(--bg-color);
  --button-hover-bg-color: var(--border-color);
}

h1 {
  font-size: 40px; /* Đặt kích thước chữ của h2 là 24px */
  margin-top: 0px; /* Khoảng cách từ thẻ h2 đến phần tử phía trên */
  margin-bottom: 10px; /* Khoảng cách từ thẻ h2 đến phần tử phía dưới */
  margin-left: 0.1%;
}

h2 {
  font-size: 30px; /* Đặt kích thước chữ của h2 là 24px */
  margin-top: 10px; /* Khoảng cách từ thẻ h2 đến phần tử phía trên */
  margin-bottom: 10px; /* Khoảng cách từ thẻ h2 đến phần tử phía dưới */
  margin-left: 0.1%;
}

body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: background-color 0.3s ease, color 0.3s ease; /* Transition specific properties */
}

/* header */
.header {
  background-color: var(--header-bg-color); 
  color: var(--text-color);                 
  font-size: 28px;
  display: flex;
  align-items: center;
  justify-content: space-between; /* hoặc dùng margin-left: auto cho button */
  padding: 1%;
  letter-spacing: 1.5px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow might need theme adjustment too */
  border-bottom: 6px solid var(--header-border-color); 
}

#themeToggle {
  background-color: var(--button-bg-color); /* Sử dụng biến mới */
  border: 2px solid var(--button-border-color); /* Sử dụng biến mới */
  color: var(--button-text-color); /* Sử dụng biến mới */
  padding: 0.5% 0.5%;
  margin-left: 20px;
  font-size: px;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.3s, color 0.3s;
}

#themeToggle:hover {
  background-color: var(--button-hover-bg-color); /* Sử dụng biến mới */
  color: var(--button-hover-text-color); /* Sử dụng biến mới */
}

/* footer */
.footer {
  background-color: var(--header-bg-color); 
  color: var(--text-color);                 
  text-align: center;
  padding: 1% 1%;
  font-size: 14px;
  position: relative;
  margin-top: 40px;
  border-top: 6px solid var(--header-border-color); 
  font-family: 'Segoe UI', sans-serif;
}

/* component */
.component {
  fill: var(--component-fill); 
  stroke: var(--component-stroke); 
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
}
.selected-component {
  fill: var(--component-fill); 
  stroke: var(--border-color); 
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
}
.control-component {
  fill: var(--component-fill); 
  stroke: var(--control-color); 
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
}
.mux-select-0 {
  fill: aqua; 
  stroke: aqua; 
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
  opacity: 0.5;
  visibility: hidden;
}
.mux-select-1 {
  fill: red; 
  stroke: red; 
  stroke-width: 2;
  vector-effect: non-scaling-stroke;
  opacity: 0.5;
  visibility: hidden;
}

/* label */
.label {
  font-family: sans-serif;
  font-size: 22px;
  text-anchor: middle;
  dominant-baseline: middle;
  fill: var(--label-fill); 
  font-weight: bold;
}
.instruction {
  font-family: sans-serif;
  font-size: 22px;
  text-anchor: middle;
  dominant-baseline: middle;
  fill: rgb(255, 44, 44); 
}
.mem-label {
  font-family: sans-serif;
  font-size: 20px;
  fill: var(--mem-label-fill); 
}
.control-label {
  font-family: sans-serif;
  font-size: 22px;
  text-anchor: middle;
  dominant-baseline: middle;
  fill: var(--control-color); 
  font-weight: bold;
}
.mem-control-label {
  font-family: monospace;
  font-size: 20px;
  fill: var(--control-color); 
}
.component-value {
  font-family: monospace;
  font-size: 15px;
  fill: var(--control-color); 
  
}
.label-start {
  font-family: sans-serif;
  font-size: 10px;
  text-anchor: start;
  dominant-baseline: middle;
  fill: var(--label-start-fill); 
}

/* line */
.signal-line {
  fill: none;
  stroke: var(--signal-line-stroke); 
  stroke-width: 3;
}
.control-signal-line{
  fill: none;
  stroke: var(--control-color); 
  stroke-width: 3;
}
.ALU-control-signal-line{
  fill: none;
  stroke: var(--control-color); 
  stroke-width: 6;
}

/* Code and Frame container */
.codeAndFrameContainer {
  display: flex;
  align-items: stretch; 
  width: 100%; /* Toàn bộ chiều rộng của container */
}
/* codeBox */
.codeBox {
  flex: 0 0 21%; /* Không co giãn, chiếm 30% */
  padding: 0 1%; /* Padding ngang (trái và phải) */
  margin-left: auto;
  display: flex; /* Thêm flex để quản lý chiều cao của code-editor */
  flex-direction: column; /* Sắp xếp h2 và form theo cột */
  overflow: hidden;
}
.code-editor {
  display: flex;
  border: 2px solid var(--border-color); 
  background-color: var(--bg-color); 
  font-family: monospace;

  overflow-x: auto; 
  overflow-y: hidden; 

  height: 50%;
  width: 100%;
  
  font-size: 130%;
}

/* Thanh cuộn chung cho line-numbers và instructionCode */
.code-editor-wrapper {
  display: flex;
  width: 100%; /* Chiếm hết chiều rộng */
  overflow-x: auto; /* Thanh cuộn ngang cho cả hai phần tử */
  position: relative;
}
.line-numbers {
  padding: 10px 10px;
  text-align: right;
  background-color: var(--line-number-bg); /* Use variable */
  color: var(--line-number-color); /* Use variable */
  user-select: none;
  overflow-y: hidden; /* Không hiển thị thanh cuộn dọc */
  flex-shrink: 0; /* Đảm bảo line-numbers không bị co lại */

  font-size: 100%;
}

.instructionCode {
  flex-grow: 1;  /* Cho phép textarea mở rộng để lấp đầy không gian còn lại */
  background-color: var(--frame-bg-color); /* Use variable */
  color: var(--text-color); /* Use variable */
  font-family: monospace;
  border: none; /* Remove border potentially set by var */
  padding: 10px 10px;
  resize: none; /* Ngăn người dùng thay đổi kích thước textarea (tùy chọn) */
  /* Đảm bảo các thuộc tính này không bị ghi đè */
  box-shadow: none; 
  outline: none;
  overflow-x: auto;

  font-size: 100%;
  white-space: nowrap; /* Ngăn xuống dòng nội dung, giữ mọi chữ trong một hàng ngang */
  flex-grow: 1; /* Đảm bảo instructionCode chiếm phần không gian còn lại */
}
/* **Quan trọng: Loại bỏ viền (outline) khi textarea được focus (nhấp vào)** */
.instructionCode:focus {
  outline: none; /* Loại bỏ viền xanh/cam mặc định của trình duyệt khi focus */
  box-shadow: none; /* Đảm bảo không có bóng đổ nào khác xuất hiện khi focus */
}
/* Tùy chỉnh thanh cuộn ngang */
.instructionCode::-webkit-scrollbar {
  width: 10px; /* Đặt chiều cao cho thanh cuộn ngang */
  height: 10px;
}

.instructionCode::-webkit-scrollbar-thumb {
  background-color: #4CAF50; /* Màu xanh lá cho thanh cuộn */
  border-radius: 10px; /* Bo góc cho thanh cuộn */
  cursor: pointer;
}

.instructionCode::-webkit-scrollbar-track {
  background-color: transparent; /* Màu nền cho track của thanh cuộn */
}
.button-group {
  display: flex;
  justify-content: space-between;
  align-items: center; /* nếu muốn căn giữa theo chiều dọc */
  gap: 10px; /* Khoảng cách giữa các nút */
  font-family: sans-serif;
}
.button {
  background-color: var(--button-bg-color); /* Sử dụng biến mới */
  border: 2px solid var(--button-border-color); /* Sử dụng biến mới */
  color: var(--button-text-color); /* Sử dụng biến mới */
  padding: 8px 16px;
  margin-top: 10px;
  font-size: 100%;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.3s, color 0.3s;
  flex: 1;
}
.button:hover {
  background-color: var(--button-hover-bg-color); /* Sử dụng biến mới */
  color: var(--button-hover-text-color); /* Sử dụng biến mới */
}
.log-box {
  border: 2px solid var(--border-color);
  background-color: var(--frame-bg-color); /* Use variable */
  padding: 1% 1%;
  overflow: auto;
  height: 50%;
}
/* frameBox */
.frameBox {
  flex: 0 0 75%; /* Không co giãn, chiếm 70% */
  padding: 0 1%; /* Padding ngang (trái và phải) */
  overflow: auto;
}
.frame {
  flex: 0 0 75%; /* Không co giãn, chiếm 70% */
	background-color: var(--frame-bg-color); /* Use variable */
  border: 2px solid var(--border-color); /* Use variable */
  padding: 0 0;
	overflow: hidden;
	position: relative;
  font-family: monospace;
}
.content {
	transform-origin: top left;
	transition: transform 0.1s ease;
	width: auto;
	height: auto;
}
.frameBox:-webkit-full-screen,
.frameBox:fullscreen {
  width: 100vw;
  height: 100vh;
  box-sizing: border-box;
  background-color: var(--bg-color);
  overflow: auto;
}
/* To make frameBox fullscreen style look better */
.frame-button {
  background-color: var(--button-bg-color); /* Sử dụng biến mới */
  border: 2px solid var(--button-border-color); /* Sử dụng biến mới */
  color: var(--button-text-color); /* Sử dụng biến mới */
  padding: 8px 16px;
  top: 10px;
  right: 10px;
  font-size: 100%;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.3s, color 0.3s;

  position: absolute;
}
.frame-button:hover {
  background-color: var(--button-hover-bg-color); /* Sử dụng biến mới */
  color: var(--button-hover-text-color); /* Sử dụng biến mới */
}
.start-button {
  background-color: var(--button-bg-color); /* Sử dụng biến mới */
  border: 2px solid var(--button-border-color); /* Sử dụng biến mới */
  color: var(--button-text-color); /* Sử dụng biến mới */
  padding: 8px 16px;
  top: 60px;
  right: 10px;
  font-size: 100%;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.3s, color 0.3s;

  position: absolute;
}
.start-button:hover {
  background-color: var(--button-hover-bg-color); /* Sử dụng biến mới */
  color: var(--button-hover-text-color); /* Sử dụng biến mới */
}
.stop-button {
  background-color: var(--button-bg-color); /* Sử dụng biến mới */
  border: 2px solid var(--button-border-color); /* Sử dụng biến mới */
  color: var(--button-text-color); /* Sử dụng biến mới */
  padding: 8px 16px;
  top: 110px;
  right: 10px;
  font-size: 100%;
  cursor: pointer;
  border-radius: 8px;
  transition: background-color 0.3s, color 0.3s;

  position: absolute;
}
.stop-button:hover {
  background-color: var(--button-hover-bg-color); /* Sử dụng biến mới */
  color: var(--button-hover-text-color); /* Sử dụng biến mới */
}
/* Output container */
.outputContainer {
  display: flex;
  width: 100%; /* Toàn bộ chiều rộng của container */
  align-items: stretch; /* Đảm bảo các phần tử con bắt đầu từ đầu */
  justify-content: space-between; /* Đẩy box đầu tiên sang trái, box cuối sang phải */
  font-size: 130%;
}
.parsedOutputTable {
  width: 100%;
  border-collapse: collapse;
  margin-top: 5px;
  font-family: monospace;
  font-size: 100%;
  border: 2px solid var(--border-color); /* Use variable */
  color: var(--text-color); /* Set base text color for table */
  background-color: var(--table-row-odd-bg); /* Set base background */
}
.parsedOutputTable thead {
  background-color: var(--table-header-bg); /* Use variable */
  color: var(--text-color); /* Use variable (or a specific --table-header-text-color if needed) */
}
.parsedOutputTable th,
.parsedOutputTable td {
  border: 1px solid var(--table-border-color); /* Use variable */
  padding: 8px 8px;
  text-align: center;
}
.parsedOutputTable tbody tr {
  background-color: var(--table-row-odd-bg); /* Default odd row color */
  transition: background-color 0.2s ease; /* Add transition for hover */
}
.parsedOutputTable tbody tr:nth-child(even) {
  background-color: var(--table-row-even-bg); /* Use variable */
}
.parsedOutputTable tbody tr:hover {
  background-color: var(--table-row-hover-bg); /* Use variable */
}
.parsedOutputTable td:last-child {
  color: var(--emphasis-color); /* Use variable */
}
.table-scroll-wrapper {
  max-height: 12.7%; /* hoặc ví dụ: 256px */
  overflow-x: hidden;
  overflow-y: auto;
  margin-top: 5px;
  position: relative;
  border: 2px solid var(--border-color); /* Use variable */
}
/* Scrollbar: thanh cuộn màu xanh lá, bắt đầu từ thead */
.table-scroll-wrapper::-webkit-scrollbar {
  width:10px; /* Độ rộng thanh cuộn */
}
.table-scroll-wrapper::-webkit-scrollbar-thumb {
  background-color: #4CAF50;
  border-radius: 10px;
  cursor: pointer;
}
.table-scroll-wrapper::-webkit-scrollbar-track {
  background-color: transparent;
}
.dataMemoryTable {
  width: 100%;
  border-collapse: collapse;
  font-family: monospace;
  font-size: 100%;
  color: var(--text-color); /* Set base text color for table */
  background-color: var(--table-row-odd-bg); /* Set base background */
}
.dataMemoryTable thead th {
  position: sticky;
  top: 0;
  z-index: 2;
  background-color: var(--table-header-bg); /* Use variable */
  color: var(--text-color); /* Use variable (or a specific --table-header-text-color if needed) */
}
.dataMemoryTable th,
.dataMemoryTable td {
  border: 1px solid var(--table-border-color); /* Use variable */
  padding: 8px;
  text-align: center;
}
.dataMemoryTable tbody tr {
  background-color: var(--table-row-odd-bg); /* Default odd row color */
}
.dataMemoryTable tbody tr:nth-child(even) {
  background-color: var(--table-row-even-bg); /* Use variable */
}
.dataMemoryTable tbody tr:hover {
  background-color: var(--table-row-hover-bg); /* Use variable */
}
.dataMemoryTable td:last-child {
  color: var(--emphasis-color); /* Use variable */
}

.flagsBox {
  padding: 0 1%; /* Padding ngang (trái và phải) */
  display: flex; /* Thêm flex để quản lý chiều cao của code-editor */
  flex-direction: column; /* Sắp xếp h2 và form theo cột */
  flex: 0 0 6%;
}

/* Registers */
.registersBox {
  padding: 0 1%; /* Padding ngang (trái và phải) */
  display: flex; /* Thêm flex để quản lý chiều cao của code-editor */
  flex-direction: column; /* Sắp xếp h2 và form theo cột */
  align-items: flex-start;
  flex: 0 0 67%; /* Không co giãn, chiếm 30% */
}

/* dataMemoryBox */
.dataMemoryBox {
  padding: 0 1%; /* Padding ngang (trái và phải) */
  display: flex; /* Thêm flex để quản lý chiều cao của code-editor */
  flex-direction: column; /* Sắp xếp h2 và form theo cột */
  flex: 0 0 21%; /* Không co giãn, chiếm 30% */
}

.range-container {
  display: flex;
  align-items: center;
  gap: 12px;
  bottom: 1px;
  left: 10px;
  position: absolute;
  width: 70%;
}
.range-slider {
  -webkit-appearance: none; /* Xóa kiểu mặc định (Chrome, Safari) */
  width: 20%;
  height: 8px;
  border-radius: 5px;
  background: linear-gradient(to right, rgb(67, 161, 70) 38%, #ddd 38%);
  outline: none;
  transition: background 0.3s;
  margin: 10px 0;
  cursor: pointer;
}

/* Thanh trượt (thumb) */
.range-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: var(--thumb-color, rgb(67, 161, 70));;
  border: 2px solid white;
  box-shadow: 0 0 2px rgba(0,0,0,0.5);
  transition: background 0.3s;
}

.range-slider::-moz-range-thumb {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background: #4CAF50;
  border: 2px solid white;
  cursor: pointer;
}

/* Khi hover */
.range-slider:hover::-webkit-slider-thumb {
  background: #45a049;
}

/* Firefox track */
.range-slider::-moz-range-track {
  height: 8px;
  background: #ddd;
  border-radius: 5px;
}
.range-label {
  font-family: monospace;
  font-weight: bold;
  font-size: 14px;
  color: var(--text-color);
}
.range-value {
  font-family: monospace;
  font-weight: bold;
  font-size: 17px;
  color: var(--text-color);
}

.command-box {
  font-family: monospace;
  font-weight: bold;
  font-size: 17px;
  bottom: 15px;
  left: -2px;
  padding: 10px; /* Thêm khoảng cách giữa nội dung và border */
  position: absolute;
}
.command-box p {
  margin: 0; /* Loại bỏ khoảng cách ngoài của thẻ p */
  line-height: 1; /* Chỉnh khoảng cách giữa các dòng trong thẻ p */
}